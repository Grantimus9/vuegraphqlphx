import { DocumentNode } from "graphql";
export declare namespace DataProxy {
    interface Query {
        query: DocumentNode;
        variables?: any;
    }
    interface Fragment {
        id: string;
        fragment: DocumentNode;
        fragmentName?: string;
        variables?: any;
    }
    interface WriteQueryOptions extends Query {
        data: any;
    }
    interface WriteFragmentOptions extends Fragment {
        data: any;
    }
    type DiffResult<T> = {
        result?: T;
        complete?: boolean;
    };
}
export interface DataProxy {
    readQuery<QueryType>(options: DataProxy.Query, optimistic?: boolean): QueryType | null;
    readFragment<FragmentType>(options: DataProxy.Fragment, optimistic?: boolean): FragmentType | null;
    writeQuery(options: DataProxy.WriteQueryOptions): void;
    writeFragment(options: DataProxy.WriteFragmentOptions): void;
}
