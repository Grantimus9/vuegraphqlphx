{"version":3,"file":"bundle.umd.js","sources":["core/networkStatus.js","util/Observable.js","errors/ApolloError.js","core/types.js","core/ObservableQuery.js","scheduler/scheduler.js","data/mutations.js","data/queries.js","core/QueryManager.js","data/store.js","version.js","ApolloClient.js"],"sourcesContent":["export var NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nexport function isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n//# sourceMappingURL=networkStatus.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Observable as LinkObservable } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    return Observable;\n}(LinkObservable));\nexport { Observable };\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport function isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\nexport { ApolloError };\n//# sourceMappingURL=ApolloError.js.map","export var FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n//# sourceMappingURL=types.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { isEqual, tryFunctionOrLogError, maybeDeepFreeze, } from 'apollo-utilities';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { Observable } from '../util/Observable';\nimport { ApolloError } from '../errors/ApolloError';\nimport { FetchType } from './types';\nexport var hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue &&\n        ((storeValue.graphQLErrors &&\n            storeValue.graphQLErrors.length > 0 &&\n            policy === 'none') ||\n            storeValue.networkError);\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var scheduler = _a.scheduler, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.isCurrentlyPolling = false;\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = scheduler.queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        _this.scheduler = scheduler;\n        _this.queryManager = scheduler.queryManager;\n        _this.observers = [];\n        _this.subscriptionHandles = [];\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            var subscription;\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    if (!that.observers.some(function (obs) { return obs !== observer; })) {\n                        that.queryManager.removeQuery(that.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: function (error) {\n                    reject(error);\n                },\n            };\n            subscription = that.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        if (this.isTornDown) {\n            return {\n                data: this.lastError ? {} : this.lastResult ? this.lastResult.data : {},\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        if (hasError(queryStoreValue, this.options.errorPolicy)) {\n            return {\n                data: {},\n                loading: false,\n                networkStatus: queryStoreValue.networkStatus,\n                error: new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }),\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryLoading = !queryStoreValue ||\n            queryStoreValue.networkStatus === NetworkStatus.loading;\n        var loading = (this.options.fetchPolicy === 'network-only' && queryLoading) ||\n            (partial && this.options.fetchPolicy !== 'cache-only');\n        var networkStatus;\n        if (queryStoreValue) {\n            networkStatus = queryStoreValue.networkStatus;\n        }\n        else {\n            networkStatus = loading ? NetworkStatus.loading : NetworkStatus.ready;\n        }\n        var result = {\n            data: data,\n            loading: isNetworkRequestInFlight(networkStatus),\n            networkStatus: networkStatus,\n        };\n        if (queryStoreValue &&\n            queryStoreValue.graphQLErrors &&\n            this.options.errorPolicy === 'all') {\n            result.errors = queryStoreValue.graphQLErrors;\n        }\n        if (!partial) {\n            var stale = false;\n            this.lastResult = __assign({}, result, { stale: stale });\n        }\n        return __assign({}, result, { partial: partial });\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        if (this.options.fetchPolicy === 'cache-only') {\n            return Promise.reject(new Error('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = __assign({}, this.variables, variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = __assign({}, this.options.variables, this.variables);\n        }\n        var combinedOptions = __assign({}, this.options, { fetchPolicy: 'network-only' });\n        return this.queryManager\n            .fetchQuery(this.queryId, combinedOptions, FetchType.refetch)\n            .then(function (result) { return maybeDeepFreeze(result); });\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        if (!fetchMoreOptions.updateQuery) {\n            throw new Error('updateQuery option is required. This function defines how to update the query data with the new results.');\n        }\n        return Promise.resolve()\n            .then(function () {\n            var qid = _this.queryManager.generateQueryId();\n            var combinedOptions;\n            if (fetchMoreOptions.query) {\n                combinedOptions = fetchMoreOptions;\n            }\n            else {\n                combinedOptions = __assign({}, _this.options, fetchMoreOptions, { variables: __assign({}, _this.variables, fetchMoreOptions.variables) });\n            }\n            combinedOptions.fetchPolicy = 'network-only';\n            return _this.queryManager.fetchQuery(qid, combinedOptions, FetchType.normal, _this.queryId);\n        })\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult, _a) {\n                var variables = _a.variables;\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: variables,\n                });\n            });\n            return fetchMoreResult;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (data) {\n                if (options.updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return options.updateQuery(previous, {\n                            subscriptionData: data,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                console.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptionHandles.push(subscription);\n        return function () {\n            var i = _this.subscriptionHandles.indexOf(subscription);\n            if (i >= 0) {\n                _this.subscriptionHandles.splice(i, 1);\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldOptions = this.options;\n        this.options = __assign({}, this.options, opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var tryFetch = (oldOptions.fetchPolicy !== 'network-only' &&\n            opts.fetchPolicy === 'network-only') ||\n            (oldOptions.fetchPolicy === 'cache-only' &&\n                opts.fetchPolicy !== 'cache-only') ||\n            (oldOptions.fetchPolicy === 'standby' &&\n                opts.fetchPolicy !== 'standby') ||\n            false;\n        return this.setVariables(this.options.variables, tryFetch, opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        var newVariables = __assign({}, this.variables, variables);\n        if (isEqual(newVariables, this.variables) && !tryFetch) {\n            if (this.observers.length === 0 || !fetchResults) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.result();\n        }\n        else {\n            this.lastVariables = this.variables;\n            this.variables = newVariables;\n            this.options.variables = newVariables;\n            if (this.observers.length === 0) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.queryManager\n                .fetchQuery(this.queryId, __assign({}, this.options, { variables: this.variables }))\n                .then(function (result) { return maybeDeepFreeze(result); });\n        }\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var _a = this.queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            this.queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            this.queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.options.pollInterval = undefined;\n            this.isCurrentlyPolling = false;\n        }\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        if (this.options.fetchPolicy === 'cache-first' ||\n            this.options.fetchPolicy === 'cache-only') {\n            throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n        }\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        this.options.pollInterval = pollInterval;\n        this.isCurrentlyPolling = true;\n        this.scheduler.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        if (observer._subscription &&\n            observer._subscription._observer &&\n            !observer._subscription._observer.error) {\n            observer._subscription._observer.error = function (error) {\n                console.error('Unhandled error', error.message, error.stack);\n            };\n        }\n        this.observers.push(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (this.observers.length === 1)\n            this.setUpQuery();\n        return function () {\n            _this.observers = _this.observers.filter(function (obs) { return obs !== observer; });\n            if (_this.observers.length === 0) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        if (this.shouldSubscribe) {\n            this.queryManager.addObservableQuery(this.queryId, this);\n        }\n        if (!!this.options.pollInterval) {\n            if (this.options.fetchPolicy === 'cache-first' ||\n                this.options.fetchPolicy === 'cache-only') {\n                throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n            }\n            this.isCurrentlyPolling = true;\n            this.scheduler.startPollingQuery(this.options, this.queryId);\n        }\n        var observer = {\n            next: function (result) {\n                _this.lastResult = result;\n                _this.observers.forEach(function (obs) { return obs.next && obs.next(result); });\n            },\n            error: function (error) {\n                _this.lastError = error;\n                _this.observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n        };\n        this.queryManager.startQuery(this.queryId, this.options, this.queryManager.queryListenerForObserver(this.queryId, this.options, observer));\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        this.isTornDown = true;\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        this.subscriptionHandles.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptionHandles = [];\n        this.queryManager.removeObservableQuery(this.queryId);\n        this.queryManager.stopQuery(this.queryId);\n        this.observers = [];\n    };\n    return ObservableQuery;\n}(Observable));\nexport { ObservableQuery };\n//# sourceMappingURL=ObservableQuery.js.map","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { FetchType } from '../core/types';\nimport { ObservableQuery } from '../core/ObservableQuery';\nimport { NetworkStatus } from '../core/networkStatus';\nvar QueryScheduler = (function () {\n    function QueryScheduler(_a) {\n        var queryManager = _a.queryManager, ssrMode = _a.ssrMode;\n        this.inFlightQueries = {};\n        this.registeredQueries = {};\n        this.intervalQueries = {};\n        this.pollingTimers = {};\n        this.ssrMode = false;\n        this.queryManager = queryManager;\n        this.ssrMode = ssrMode || false;\n    }\n    QueryScheduler.prototype.checkInFlight = function (queryId) {\n        var query = this.queryManager.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryScheduler.prototype.fetchQuery = function (queryId, options, fetchType) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.queryManager\n                .fetchQuery(queryId, options, fetchType)\n                .then(function (result) {\n                resolve(result);\n            })\n                .catch(function (error) {\n                reject(error);\n            });\n        });\n    };\n    QueryScheduler.prototype.startPollingQuery = function (options, queryId, listener) {\n        if (!options.pollInterval) {\n            throw new Error('Attempted to start a polling query without a polling interval.');\n        }\n        if (this.ssrMode)\n            return queryId;\n        this.registeredQueries[queryId] = options;\n        if (listener) {\n            this.queryManager.addQueryListener(queryId, listener);\n        }\n        this.addQueryOnInterval(queryId, options);\n        return queryId;\n    };\n    QueryScheduler.prototype.stopPollingQuery = function (queryId) {\n        delete this.registeredQueries[queryId];\n    };\n    QueryScheduler.prototype.fetchQueriesOnInterval = function (interval) {\n        var _this = this;\n        this.intervalQueries[interval] = this.intervalQueries[interval].filter(function (queryId) {\n            if (!(_this.registeredQueries.hasOwnProperty(queryId) &&\n                _this.registeredQueries[queryId].pollInterval === interval)) {\n                return false;\n            }\n            if (_this.checkInFlight(queryId)) {\n                return true;\n            }\n            var queryOptions = _this.registeredQueries[queryId];\n            var pollingOptions = __assign({}, queryOptions);\n            pollingOptions.fetchPolicy = 'network-only';\n            _this.fetchQuery(queryId, pollingOptions, FetchType.poll).catch(function () { });\n            return true;\n        });\n        if (this.intervalQueries[interval].length === 0) {\n            clearInterval(this.pollingTimers[interval]);\n            delete this.intervalQueries[interval];\n        }\n    };\n    QueryScheduler.prototype.addQueryOnInterval = function (queryId, queryOptions) {\n        var _this = this;\n        var interval = queryOptions.pollInterval;\n        if (!interval) {\n            throw new Error(\"A poll interval is required to start polling query with id '\" + queryId + \"'.\");\n        }\n        if (this.intervalQueries.hasOwnProperty(interval.toString()) &&\n            this.intervalQueries[interval].length > 0) {\n            this.intervalQueries[interval].push(queryId);\n        }\n        else {\n            this.intervalQueries[interval] = [queryId];\n            this.pollingTimers[interval] = setInterval(function () {\n                _this.fetchQueriesOnInterval(interval);\n            }, interval);\n        }\n    };\n    QueryScheduler.prototype.registerPollingQuery = function (queryOptions) {\n        if (!queryOptions.pollInterval) {\n            throw new Error('Attempted to register a non-polling query with the scheduler.');\n        }\n        return new ObservableQuery({\n            scheduler: this,\n            options: queryOptions,\n        });\n    };\n    return QueryScheduler;\n}());\nexport { QueryScheduler };\n//# sourceMappingURL=scheduler.js.map","var MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutationString, variables) {\n        this.store[mutationId] = {\n            mutationString: mutationString,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        this.store[mutationId].loading = false;\n        this.store[mutationId].error = error;\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        this.store[mutationId].loading = false;\n        this.store[mutationId].error = null;\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\nexport { MutationStore };\n//# sourceMappingURL=mutations.js.map","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { isEqual } from 'apollo-utilities';\nimport { NetworkStatus } from '../core/networkStatus';\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        if (previousQuery && previousQuery.queryString !== query.queryString) {\n            throw new Error('Internal Error: may not update existing query string in store');\n        }\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            queryString: query.queryString,\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string') {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors =\n            result.errors && result.errors.length ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryError(fetchMoreForQueryId, error, undefined);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = complete\n            ? NetworkStatus.ready\n            : NetworkStatus.loading;\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        this.store = Object.keys(this.store)\n            .filter(function (queryId) {\n            return observableQueryIds.indexOf(queryId) > -1;\n        })\n            .reduce(function (res, key) {\n            res[key] = __assign({}, _this.store[key], { networkStatus: NetworkStatus.loading });\n            return res;\n        }, {});\n    };\n    return QueryStore;\n}());\nexport { QueryStore };\n//# sourceMappingURL=queries.js.map","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { execute, ApolloLink } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\nimport { DedupLink as Deduplicator } from 'apollo-link-dedup';\nimport { assign, getDefaultValues, getMutationDefinition, getOperationDefinition, getOperationName, getQueryDefinition, isProduction, maybeDeepFreeze, hasDirectives, } from 'apollo-utilities';\nimport { QueryScheduler } from '../scheduler/scheduler';\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observable } from '../util/Observable';\nimport { MutationStore } from '../data/mutations';\nimport { QueryStore } from '../data/queries';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { FetchType } from './types';\nvar defaultQueryInfo = {\n    listeners: [],\n    invalidated: false,\n    document: null,\n    newData: null,\n    lastRequestId: null,\n    observableQuery: null,\n    subscriptions: [],\n};\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryPromises = new Map();\n        this.queryIdsByName = {};\n        this.link = link;\n        this.deduplicator = ApolloLink.from([new Deduplicator(), link]);\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.scheduler = new QueryScheduler({ queryManager: this, ssrMode: ssrMode });\n    }\n    QueryManager.prototype.mutate = function (_a) {\n        var _this = this;\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, updateWithProxyFn = _a.update, _c = _a.errorPolicy, errorPolicy = _c === void 0 ? 'none' : _c, _d = _a.context, context = _d === void 0 ? {} : _d;\n        if (!mutation) {\n            throw new Error('mutation option is required. You must specify your GraphQL document in the mutation option.');\n        }\n        var mutationId = this.generateQueryId();\n        var cache = this.dataStore.getCache();\n        (mutation = cache.transformDocument(mutation)),\n            (variables = assign({}, getDefaultValues(getMutationDefinition(mutation)), variables));\n        var mutationString = print(mutation);\n        var request = {\n            query: mutation,\n            variables: variables,\n            operationName: getOperationName(mutation) || undefined,\n            context: context,\n        };\n        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n        var generateUpdateQueriesInfo = function () {\n            var ret = {};\n            if (updateQueriesByName) {\n                Object.keys(updateQueriesByName).forEach(function (queryName) {\n                    return (_this.queryIdsByName[queryName] || []).forEach(function (queryId) {\n                        ret[queryId] = {\n                            updater: updateQueriesByName[queryName],\n                            query: _this.queryStore.get(queryId),\n                        };\n                    });\n                });\n            }\n            return ret;\n        };\n        this.mutationStore.initMutation(mutationId, mutationString, variables);\n        this.dataStore.markMutationInit({\n            mutationId: mutationId,\n            document: mutation,\n            variables: variables || {},\n            updateQueries: generateUpdateQueriesInfo(),\n            update: updateWithProxyFn,\n            optimisticResponse: optimisticResponse,\n        });\n        this.broadcastQueries();\n        return new Promise(function (resolve, reject) {\n            var storeResult;\n            var error;\n            var newRequest = __assign({ context: {} }, request, { query: cache.transformForLink\n                    ? cache.transformForLink(request.query)\n                    : request.query });\n            newRequest.context.cache = _this.dataStore.getCache();\n            execute(_this.link, newRequest).subscribe({\n                next: function (result) {\n                    if (result.errors && errorPolicy === 'none') {\n                        error = new ApolloError({\n                            graphQLErrors: result.errors,\n                        });\n                        return;\n                    }\n                    _this.mutationStore.markMutationResult(mutationId);\n                    _this.dataStore.markMutationResult({\n                        mutationId: mutationId,\n                        result: result,\n                        document: mutation,\n                        variables: variables || {},\n                        updateQueries: generateUpdateQueriesInfo(),\n                        update: updateWithProxyFn,\n                    });\n                    storeResult = result;\n                },\n                error: function (err) {\n                    _this.mutationStore.markMutationError(mutationId, err);\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    reject(new ApolloError({\n                        networkError: err,\n                    }));\n                },\n                complete: function () {\n                    if (error) {\n                        _this.mutationStore.markMutationError(mutationId, error);\n                    }\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    if (typeof refetchQueries === 'function')\n                        refetchQueries = refetchQueries(storeResult);\n                    refetchQueries.forEach(function (refetchQuery) {\n                        if (typeof refetchQuery === 'string') {\n                            _this.refetchQueryByName(refetchQuery);\n                            return;\n                        }\n                        _this.query({\n                            query: refetchQuery.query,\n                            variables: refetchQuery.variables,\n                            fetchPolicy: 'network-only',\n                        });\n                    });\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    if (errorPolicy === 'ignore' && storeResult && storeResult.errors) {\n                        delete storeResult.errors;\n                    }\n                    resolve(storeResult);\n                },\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        var _this = this;\n        var _a = options.variables, variables = _a === void 0 ? {} : _a, _b = options.metadata, metadata = _b === void 0 ? null : _b, _c = options.fetchPolicy, fetchPolicy = _c === void 0 ? 'cache-first' : _c;\n        var cache = this.dataStore.getCache();\n        var query = cache.transformDocument(options.query);\n        var storeResult;\n        var needToFetch = fetchPolicy === 'network-only';\n        if (fetchType !== FetchType.refetch && fetchPolicy !== 'network-only') {\n            var _d = this.dataStore.getCache().diff({\n                query: query,\n                variables: variables,\n                returnPartialData: true,\n                optimistic: false,\n            }), complete = _d.complete, result = _d.result;\n            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n            storeResult = result;\n        }\n        var shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n        if (hasDirectives(['live'], query))\n            shouldFetch = true;\n        var requestId = this.generateRequestId();\n        var cancel = this.updateQueryWatch(queryId, query, options);\n        this.setQuery(queryId, function () { return ({\n            document: query,\n            lastRequestId: requestId,\n            invalidated: true,\n            cancel: cancel,\n        }); });\n        this.invalidate(true, fetchMoreForQueryId);\n        this.queryStore.initQuery({\n            queryId: queryId,\n            queryString: print(query),\n            document: query,\n            storePreviousVariables: shouldFetch,\n            variables: variables,\n            isPoll: fetchType === FetchType.poll,\n            isRefetch: fetchType === FetchType.refetch,\n            metadata: metadata,\n            fetchMoreForQueryId: fetchMoreForQueryId,\n        });\n        this.broadcastQueries();\n        var shouldDispatchClientResult = !shouldFetch || fetchPolicy === 'cache-and-network';\n        if (shouldDispatchClientResult) {\n            this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n            this.invalidate(true, queryId, fetchMoreForQueryId);\n            this.broadcastQueries();\n        }\n        if (shouldFetch) {\n            var networkResult = this.fetchRequest({\n                requestId: requestId,\n                queryId: queryId,\n                document: cache.transformForLink\n                    ? cache.transformForLink(query)\n                    : query,\n                options: options,\n                fetchMoreForQueryId: fetchMoreForQueryId,\n            }).catch(function (error) {\n                if (isApolloError(error)) {\n                    throw error;\n                }\n                else {\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    _this.removeFetchQueryPromise(requestId);\n                    throw new ApolloError({ networkError: error });\n                }\n            });\n            if (fetchPolicy !== 'cache-and-network') {\n                return networkResult;\n            }\n            else {\n                networkResult.catch(function () { });\n            }\n        }\n        return Promise.resolve({ data: storeResult });\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        var previouslyHadError = false;\n        return function (queryStoreValue, newData) {\n            _this.invalidate(false, queryId);\n            if (!queryStoreValue)\n                return;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var errorPolicy = observableQuery\n                ? observableQuery.options.errorPolicy\n                : options.errorPolicy;\n            var lastResult = observableQuery\n                ? observableQuery.getLastResult()\n                : null;\n            var lastError = observableQuery ? observableQuery.getLastError() : null;\n            var shouldNotifyIfLoading = (!newData && queryStoreValue.previousVariables != null) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            var networkStatusChanged = Boolean(lastResult &&\n                queryStoreValue.networkStatus !== lastResult.networkStatus);\n            var errorStatusChanged = errorPolicy &&\n                (lastError && lastError.graphQLErrors) !==\n                    queryStoreValue.graphQLErrors &&\n                errorPolicy !== 'none';\n            if (!isNetworkRequestInFlight(queryStoreValue.networkStatus) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                shouldNotifyIfLoading) {\n                if (((!errorPolicy || errorPolicy === 'none') &&\n                    queryStoreValue.graphQLErrors &&\n                    queryStoreValue.graphQLErrors.length > 0) ||\n                    queryStoreValue.networkError) {\n                    var apolloError_1 = new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    });\n                    previouslyHadError = true;\n                    if (observer.error) {\n                        try {\n                            observer.error(apolloError_1);\n                        }\n                        catch (e) {\n                            setTimeout(function () {\n                                throw e;\n                            }, 0);\n                        }\n                    }\n                    else {\n                        setTimeout(function () {\n                            throw apolloError_1;\n                        }, 0);\n                        if (!isProduction()) {\n                            console.info('An unhandled error was thrown because no error handler is registered ' +\n                                'for the query ' +\n                                queryStoreValue.queryString);\n                        }\n                    }\n                    return;\n                }\n                try {\n                    var data = void 0;\n                    var isMissing = void 0;\n                    if (newData) {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                        data = newData.result;\n                        isMissing = !newData.complete ? !newData.complete : false;\n                    }\n                    else {\n                        if (lastResult && lastResult.data && !errorStatusChanged) {\n                            data = lastResult.data;\n                            isMissing = false;\n                        }\n                        else {\n                            var document_1 = _this.getQuery(queryId).document;\n                            var readResult = _this.dataStore.getCache().diff({\n                                query: document_1,\n                                variables: queryStoreValue.previousVariables ||\n                                    queryStoreValue.variables,\n                                optimistic: true,\n                            });\n                            data = readResult.result;\n                            isMissing = !readResult.complete;\n                        }\n                    }\n                    var resultFromStore = void 0;\n                    if (isMissing && fetchPolicy !== 'cache-only') {\n                        resultFromStore = {\n                            data: lastResult && lastResult.data,\n                            loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: true,\n                        };\n                    }\n                    else {\n                        resultFromStore = {\n                            data: data,\n                            loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: false,\n                        };\n                    }\n                    if (errorPolicy === 'all' &&\n                        queryStoreValue.graphQLErrors &&\n                        queryStoreValue.graphQLErrors.length > 0) {\n                        resultFromStore.errors = queryStoreValue.graphQLErrors;\n                    }\n                    if (observer.next) {\n                        var isDifferentResult = !(lastResult &&\n                            resultFromStore &&\n                            lastResult.networkStatus === resultFromStore.networkStatus &&\n                            lastResult.stale === resultFromStore.stale &&\n                            lastResult.data === resultFromStore.data);\n                        if (isDifferentResult || previouslyHadError) {\n                            try {\n                                observer.next(maybeDeepFreeze(resultFromStore));\n                            }\n                            catch (e) {\n                                setTimeout(function () {\n                                    throw e;\n                                }, 0);\n                            }\n                        }\n                    }\n                    previouslyHadError = false;\n                }\n                catch (error) {\n                    previouslyHadError = true;\n                    if (observer.error)\n                        observer.error(new ApolloError({ networkError: error }));\n                    return;\n                }\n            }\n        };\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        if (options.fetchPolicy === 'standby') {\n            throw new Error('client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        }\n        var queryDefinition = getQueryDefinition(options.query);\n        if (queryDefinition.variableDefinitions &&\n            queryDefinition.variableDefinitions.length) {\n            var defaultValues = getDefaultValues(queryDefinition);\n            options.variables = assign({}, defaultValues, options.variables);\n        }\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            scheduler: this.scheduler,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        if (!options.query) {\n            throw new Error('query option is required. You must specify your GraphQL document in the query option.');\n        }\n        if (options.query.kind !== 'Document') {\n            throw new Error('You must wrap the query string in a \"gql\" tag.');\n        }\n        if (options.returnPartialData) {\n            throw new Error('returnPartialData option only supported on watchQuery.');\n        }\n        if (options.pollInterval) {\n            throw new Error('pollInterval option only supported on watchQuery.');\n        }\n        if (typeof options.notifyOnNetworkStatusChange !== 'undefined') {\n            throw new Error('Cannot call \"query\" with \"notifyOnNetworkStatusChange\" option. Only \"watchQuery\" has that option.');\n        }\n        options.notifyOnNetworkStatusChange = false;\n        var requestId = this.idCounter;\n        var resPromise = new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resPromise, resolve, reject);\n            return _this.watchQuery(options, false)\n                .result()\n                .then(function (result) {\n                _this.removeFetchQueryPromise(requestId);\n                resolve(result);\n            })\n                .catch(function (error) {\n                _this.removeFetchQueryPromise(requestId);\n                reject(error);\n            });\n        });\n        return resPromise;\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        var queryId = this.idCounter.toString();\n        this.idCounter++;\n        return queryId;\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(true, queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var _b = _a.listeners, listeners = _b === void 0 ? [] : _b;\n            return ({\n                listeners: listeners.concat([listener]),\n                invalidate: false,\n            });\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addFetchQueryPromise = function (requestId, promise, resolve, reject) {\n        this.fetchQueryPromises.set(requestId.toString(), {\n            promise: promise,\n            resolve: resolve,\n            reject: reject,\n        });\n    };\n    QueryManager.prototype.removeFetchQueryPromise = function (requestId) {\n        this.fetchQueryPromises.delete(requestId.toString());\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n        var queryDef = getQueryDefinition(observableQuery.options.query);\n        if (queryDef.name && queryDef.name.value) {\n            var queryName = queryDef.name.value;\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName] || [];\n            this.queryIdsByName[queryName].push(observableQuery.queryId);\n        }\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var _a = this.getQuery(queryId), observableQuery = _a.observableQuery, cancel = _a.cancel;\n        if (cancel)\n            cancel();\n        if (!observableQuery)\n            return;\n        var definition = getQueryDefinition(observableQuery.options.query);\n        var queryName = definition.name ? definition.name.value : null;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (queryName) {\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName].filter(function (val) {\n                return !(observableQuery.queryId === val);\n            });\n        }\n    };\n    QueryManager.prototype.resetStore = function () {\n        this.fetchQueryPromises.forEach(function (_a) {\n            var reject = _a.reject;\n            reject(new Error('Store reset while query was in flight.'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        var dataStoreReset = this.dataStore.reset();\n        var observableQueryPromises = this.getObservableQueryPromises();\n        this.broadcastQueries();\n        return dataStoreReset.then(function () { return Promise.all(observableQueryPromises); });\n    };\n    QueryManager.prototype.getObservableQueryPromises = function () {\n        var _this = this;\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (!observableQuery)\n                return;\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby') {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.setQuery(queryId, function () { return ({ newData: null }); });\n            _this.invalidate(true, queryId);\n        });\n        return observableQueryPromises;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function () {\n        var observableQueryPromises = this.getObservableQueryPromises();\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (options) {\n        var _this = this;\n        var query = options.query;\n        var cache = this.dataStore.getCache();\n        var transformedDoc = cache.transformDocument(query);\n        var variables = assign({}, getDefaultValues(getOperationDefinition(query)), options.variables);\n        var request = {\n            query: transformedDoc,\n            variables: variables,\n            operationName: getOperationName(transformedDoc) || undefined,\n        };\n        var sub;\n        var observers = [];\n        return new Observable(function (observer) {\n            observers.push(observer);\n            if (observers.length === 1) {\n                var handler = {\n                    next: function (result) {\n                        _this.dataStore.markSubscriptionResult(result, transformedDoc, variables);\n                        _this.broadcastQueries();\n                        observers.forEach(function (obs) {\n                            if (obs.next)\n                                obs.next(result);\n                        });\n                    },\n                    error: function (error) {\n                        observers.forEach(function (obs) {\n                            if (obs.error)\n                                obs.error(error);\n                        });\n                    },\n                };\n                var newRequest = __assign({}, request, { query: cache.transformForLink\n                        ? cache.transformForLink(request.query)\n                        : request.query });\n                sub = execute(_this.link, newRequest).subscribe(handler);\n            }\n            return function () {\n                observers = observers.filter(function (obs) { return obs !== observer; });\n                if (observers.length === 0 && sub) {\n                    sub.unsubscribe();\n                }\n            };\n        });\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.removeQuery(queryId);\n        this.stopQueryInStore(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        var subscriptions = this.getQuery(queryId).subscriptions;\n        subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery) {\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData) {\n            return maybeDeepFreeze({ data: newData.result, partial: false });\n        }\n        else {\n            try {\n                var data = this.dataStore.getCache().read({\n                    query: query,\n                    variables: variables,\n                    previousResult: lastResult ? lastResult.data : undefined,\n                    optimistic: true,\n                });\n                return maybeDeepFreeze({ data: data, partial: false });\n            }\n            catch (e) {\n                return maybeDeepFreeze({ data: {}, partial: true });\n            }\n        }\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            if (!foundObserveableQuery) {\n                throw new Error(\"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            }\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var data = this.getCurrentQueryResult(observableQuery).data;\n        return {\n            previousResult: data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (!info.invalidated || !info.listeners)\n                return;\n            info.listeners\n                .filter(function (x) { return !!x; })\n                .forEach(function (listener) {\n                listener(_this.queryStore.get(id), info.newData);\n            });\n        });\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, context = options.context, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b;\n        var request = {\n            query: document,\n            variables: variables,\n            operationName: getOperationName(document) || undefined,\n            context: context || {},\n        };\n        request.context.forceFetch = !this.queryDeduplication;\n        request.context.cache = this.dataStore.getCache();\n        var resultFromStore;\n        var errorsFromStore;\n        var retPromise = new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, retPromise, resolve, reject);\n            var subscription = execute(_this.deduplicator, request).subscribe({\n                next: function (result) {\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        try {\n                            _this.dataStore.markQueryResult(result, document, variables, fetchMoreForQueryId, errorPolicy === 'ignore');\n                        }\n                        catch (e) {\n                            reject(e);\n                            return;\n                        }\n                        _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    if (result.errors && errorPolicy === 'none') {\n                        reject(new ApolloError({\n                            graphQLErrors: result.errors,\n                        }));\n                        return;\n                    }\n                    else if (errorPolicy === 'all') {\n                        errorsFromStore = result.errors;\n                    }\n                    if (fetchMoreForQueryId) {\n                        resultFromStore = result.data;\n                    }\n                    else {\n                        try {\n                            resultFromStore = _this.dataStore.getCache().read({\n                                variables: variables,\n                                query: document,\n                                optimistic: false,\n                            });\n                        }\n                        catch (e) { }\n                    }\n                },\n                error: function (error) {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    reject(error);\n                },\n                complete: function () {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                return ({\n                    subscriptions: subscriptions.concat([subscription]),\n                });\n            });\n        });\n        return retPromise;\n    };\n    QueryManager.prototype.refetchQueryByName = function (queryName) {\n        var _this = this;\n        var refetchedQueries = this.queryIdsByName[queryName];\n        if (refetchedQueries === undefined)\n            return;\n        return Promise.all(refetchedQueries\n            .map(function (id) { return _this.getQuery(id).observableQuery; })\n            .filter(function (x) { return !!x; })\n            .map(function (x) { return x.refetch(); }));\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        var requestId = this.idCounter;\n        this.idCounter++;\n        return requestId;\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return this.queries.get(queryId) || __assign({}, defaultQueryInfo);\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign({}, prev, updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (invalidated, queryId, fetchMoreForQueryId) {\n        if (queryId)\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        if (fetchMoreForQueryId) {\n            this.setQuery(fetchMoreForQueryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    return QueryManager;\n}());\nexport { QueryManager };\n//# sourceMappingURL=QueryManager.js.map","import { getOperationName, tryFunctionOrLogError, graphQLResultHasError, } from 'apollo-utilities';\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            var changeFn_1 = function () {\n                _this.markMutationResult({\n                    mutationId: mutation.mutationId,\n                    result: { data: optimistic_1 },\n                    document: mutation.document,\n                    variables: mutation.variables,\n                    updateQueries: mutation.updateQueries,\n                    update: mutation.update,\n                });\n            };\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    changeFn_1();\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [];\n            cacheWrites_1.push({\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            });\n            if (mutation.updateQueries) {\n                Object.keys(mutation.updateQueries)\n                    .filter(function (id) { return mutation.updateQueries[id]; })\n                    .forEach(function (queryId) {\n                    var _a = mutation.updateQueries[queryId], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (!complete) {\n                        return;\n                    }\n                    var nextQueryResult = tryFunctionOrLogError(function () {\n                        return updater(currentQueryResult, {\n                            mutationResult: mutation.result,\n                            queryName: getOperationName(query.document) || undefined,\n                            queryVariables: query.variables,\n                        });\n                    });\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n            });\n            var update_1 = mutation.update;\n            if (update_1) {\n                this.cache.performTransaction(function (c) {\n                    tryFunctionOrLogError(function () { return update_1(c, mutation.result); });\n                });\n            }\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (!optimisticResponse)\n            return;\n        this.cache.removeOptimistic(mutationId);\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\nexport { DataStore };\n//# sourceMappingURL=store.js.map","export var version = \"2.0.4\";\n//# sourceMappingURL=version.js.map","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ApolloLink, execute, } from 'apollo-link';\nimport { isProduction, removeConnectionDirectiveFromDocument, } from 'apollo-utilities';\nimport { QueryManager } from './core/QueryManager';\nimport { DataStore } from './data/store';\nimport { version } from './version';\nvar hasSuggestedDevtools = false;\nvar supportedDirectives = new ApolloLink(function (operation, forward) {\n    operation.query = removeConnectionDirectiveFromDocument(operation.query);\n    return forward(operation);\n});\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        var link = options.link, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions;\n        if (!link || !cache) {\n            throw new Error(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n        }\n        this.link = supportedDirectives.concat(link);\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.ssrMode = ssrMode;\n        this.defaultOptions = defaultOptions || {};\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = !isProduction() &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && !isProduction()) {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n    }\n    ApolloClient.prototype.watchQuery = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.watchQuery) {\n            options = __assign({}, this.defaultOptions.watchQuery, options);\n        }\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        this.initQueryManager();\n        if (options.fetchPolicy === 'cache-and-network') {\n            throw new Error('cache-and-network fetchPolicy can only be used with watchQuery');\n        }\n        if (this.defaultOptions.query) {\n            options = __assign({}, this.defaultOptions.query, options);\n        }\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.mutate) {\n            options = __assign({}, this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        this.initQueryManager();\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options) {\n        return this.initProxy().readQuery(options);\n    };\n    ApolloClient.prototype.readFragment = function (options) {\n        return this.initProxy().readFragment(options);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.initProxy().writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.initProxy().writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        var _this = this;\n        if (this.queryManager)\n            return;\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: this.queryDeduplication,\n            ssrMode: this.ssrMode,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    };\n    ApolloClient.prototype.resetStore = function () {\n        return this.queryManager\n            ? this.queryManager.resetStore()\n            : Promise.resolve(null);\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function () {\n        return this.queryManager\n            ? this.queryManager.reFetchObservableQueries()\n            : Promise.resolve(null);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.initProxy().extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.initProxy().restore(serializedState);\n    };\n    ApolloClient.prototype.initProxy = function () {\n        if (!this.proxy) {\n            this.initQueryManager();\n            this.proxy = this.cache;\n        }\n        return this.proxy;\n    };\n    return ApolloClient;\n}());\nexport default ApolloClient;\n//# sourceMappingURL=ApolloClient.js.map"],"names":["NetworkStatus","__extends","this","Observable","LinkObservable","FetchType","isEqual","maybeDeepFreeze","tryFunctionOrLogError","__assign","ApolloLink","Deduplicator","assign","getDefaultValues","getMutationDefinition","print","getOperationName","execute","hasDirectives","isProduction","getQueryDefinition","getOperationDefinition","graphQLResultHasError","removeConnectionDirectiveFromDocument","ApolloClient"],"mappings":";;;;;;;;AACA,CAAC,UAAU,aAAa,EAAE;IACtB,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IACxD,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC;IAClE,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5D,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IACxD,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAClD,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;IACpD,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;CACvD,EAAEA,qBAAa,KAAKA,qBAAa,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1C,AAAO,SAAS,wBAAwB,CAAC,aAAa,EAAE;IACpD,OAAO,aAAa,GAAG,CAAC,CAAC;CAC5B;;ACZD,IAAIC,WAAS,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,SAAS,KAAK,CAAC,YAAY;IACrD,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;SACpC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;QAC5E,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/E,OAAO,UAAU,CAAC,EAAE,CAAC,EAAE;QACnB,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;KACxF,CAAC;CACL,GAAG,CAAC;AACL,AAEA,IAAIC,YAAU,IAAI,UAAU,MAAM,EAAE;IAChCF,WAAS,CAACE,aAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,SAASA,aAAU,GAAG;QAClB,OAAO,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;KACnE;IACDA,aAAU,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,YAAY;QAC7C,OAAO,IAAI,CAAC;KACf,CAAC;IACF,OAAOA,aAAU,CAAC;CACrB,CAACC,qBAAc,CAAC,CAAC;;ACrBlB,IAAIH,WAAS,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,SAAS,KAAK,CAAC,YAAY;IACrD,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;SACpC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;QAC5E,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/E,OAAO,UAAU,CAAC,EAAE,CAAC,EAAE;QACnB,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;KACxF,CAAC;CACL,GAAG,CAAC;AACL,AAAO,SAAS,aAAa,CAAC,GAAG,EAAE;IAC/B,OAAO,GAAG,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;CAC9C;AACD,IAAI,oBAAoB,GAAG,UAAU,GAAG,EAAE;IACtC,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,GAAG,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;QACpE,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,YAAY,EAAE;YAC9C,IAAI,YAAY,GAAG,YAAY;kBACzB,YAAY,CAAC,OAAO;kBACpB,0BAA0B,CAAC;YACjC,OAAO,IAAI,iBAAiB,GAAG,YAAY,GAAG,IAAI,CAAC;SACtD,CAAC,CAAC;KACN;IACD,IAAI,GAAG,CAAC,YAAY,EAAE;QAClB,OAAO,IAAI,iBAAiB,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC;KAClE;IACD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACrC,OAAO,OAAO,CAAC;CAClB,CAAC;AACF,IAAI,WAAW,IAAI,UAAU,MAAM,EAAE;IACjCD,WAAS,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAC/B,SAAS,WAAW,CAAC,EAAE,EAAE;QACrB,IAAI,aAAa,GAAG,EAAE,CAAC,aAAa,EAAE,YAAY,GAAG,EAAE,CAAC,YAAY,EAAE,YAAY,GAAG,EAAE,CAAC,YAAY,EAAE,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;QAC/H,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,IAAI,CAAC;QACpD,KAAK,CAAC,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;QAC1C,KAAK,CAAC,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC;QAC1C,IAAI,CAAC,YAAY,EAAE;YACf,KAAK,CAAC,OAAO,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC/C;aACI;YACD,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC;SAChC;QACD,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,WAAW,CAAC;CACtB,CAAC,KAAK,CAAC,CAAC;;AC7CT,CAAC,UAAU,SAAS,EAAE;IAClB,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAC9C,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IAChD,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;CAC7C,EAAEI,iBAAS,KAAKA,iBAAS,GAAG,EAAE,CAAC,CAAC,CAAC;;ACLlC,IAAI,SAAS,GAAG,CAACH,SAAI,IAAIA,SAAI,CAAC,SAAS,KAAK,CAAC,YAAY;IACrD,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;SACpC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;QAC5E,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/E,OAAO,UAAU,CAAC,EAAE,CAAC,EAAE;QACnB,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;KACxF,CAAC;CACL,GAAG,CAAC;AACL,IAAI,QAAQ,GAAG,CAACA,SAAI,IAAIA,SAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,EAAE;IACnE,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACjB,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACnB;IACD,OAAO,CAAC,CAAC;CACZ,CAAC;AACF,AAKO,IAAI,QAAQ,GAAG,UAAU,UAAU,EAAE,MAAM,EAAE;IAChD,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,EAAE;IAC3C,OAAO,UAAU;SACZ,CAAC,UAAU,CAAC,aAAa;YACtB,UAAU,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC;YACnC,MAAM,KAAK,MAAM;YACjB,UAAU,CAAC,YAAY,CAAC,CAAC;CACpC,CAAC;AACF,IAAI,eAAe,IAAI,UAAU,MAAM,EAAE;IACrC,SAAS,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IACnC,SAAS,eAAe,CAAC,EAAE,EAAE;QACzB,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,eAAe,EAAE,eAAe,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;QACzH,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,QAAQ,EAAE;YAC9C,OAAO,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,IAAI,IAAI,CAAC;QACX,KAAK,CAAC,kBAAkB,GAAG,KAAK,CAAC;QACjC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;QACzB,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QACxB,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QAC1C,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QACzD,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC;QACxC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;QAC5C,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;QACrB,KAAK,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC;KAChB;IACD,eAAe,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;QAC3C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;YAC1C,IAAI,YAAY,CAAC;YACjB,IAAI,QAAQ,GAAG;gBACX,IAAI,EAAE,UAAU,MAAM,EAAE;oBACpB,OAAO,CAAC,MAAM,CAAC,CAAC;oBAChB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,KAAK,QAAQ,CAAC,EAAE,CAAC,EAAE;wBACnE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBAC/C;oBACD,UAAU,CAAC,YAAY;wBACnB,YAAY,CAAC,WAAW,EAAE,CAAC;qBAC9B,EAAE,CAAC,CAAC,CAAC;iBACT;gBACD,KAAK,EAAE,UAAU,KAAK,EAAE;oBACpB,MAAM,CAAC,KAAK,CAAC,CAAC;iBACjB;aACJ,CAAC;YACF,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC3C,CAAC,CAAC;KACN,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,aAAa,GAAG,YAAY;QAClD,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,OAAO;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE;gBACvE,KAAK,EAAE,IAAI,CAAC,SAAS;gBACrB,OAAO,EAAE,KAAK;gBACd,aAAa,EAAEF,qBAAa,CAAC,KAAK;aACrC,CAAC;SACL;QACD,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrE,IAAI,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YACrD,OAAO;gBACH,IAAI,EAAE,EAAE;gBACR,OAAO,EAAE,KAAK;gBACd,aAAa,EAAE,eAAe,CAAC,aAAa;gBAC5C,KAAK,EAAE,IAAI,WAAW,CAAC;oBACnB,aAAa,EAAE,eAAe,CAAC,aAAa;oBAC5C,YAAY,EAAE,eAAe,CAAC,YAAY;iBAC7C,CAAC;aACL,CAAC;SACL;QACD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;QAC7F,IAAI,YAAY,GAAG,CAAC,eAAe;YAC/B,eAAe,CAAC,aAAa,KAAKA,qBAAa,CAAC,OAAO,CAAC;QAC5D,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,cAAc,IAAI,YAAY;aACrE,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,YAAY,CAAC,CAAC;QAC3D,IAAI,aAAa,CAAC;QAClB,IAAI,eAAe,EAAE;YACjB,aAAa,GAAG,eAAe,CAAC,aAAa,CAAC;SACjD;aACI;YACD,aAAa,GAAG,OAAO,GAAGA,qBAAa,CAAC,OAAO,GAAGA,qBAAa,CAAC,KAAK,CAAC;SACzE;QACD,IAAI,MAAM,GAAG;YACT,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,wBAAwB,CAAC,aAAa,CAAC;YAChD,aAAa,EAAE,aAAa;SAC/B,CAAC;QACF,IAAI,eAAe;YACf,eAAe,CAAC,aAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,KAAK,EAAE;YACpC,MAAM,CAAC,MAAM,GAAG,eAAe,CAAC,aAAa,CAAC;SACjD;QACD,IAAI,CAAC,OAAO,EAAE;YACV,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;SAC5D;QACD,OAAO,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACrD,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,aAAa,GAAG,YAAY;QAClD,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY;QACjD,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,gBAAgB,GAAG,YAAY;QACrD,OAAO,IAAI,CAAC,UAAU,CAAC;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KAC3B,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,SAAS,EAAE;QACrD,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,YAAY,EAAE;YAC3C,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,+EAA+E,CAAC,CAAC,CAAC;SACrH;QACD,IAAI,CAACM,uBAAO,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE;YACrC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SAC5D;QACD,IAAI,CAACA,uBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;YAClD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjF;QACD,IAAI,eAAe,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,cAAc,EAAE,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,YAAY;aACnB,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,EAAED,iBAAS,CAAC,OAAO,CAAC;aAC5D,IAAI,CAAC,UAAU,MAAM,EAAE,EAAE,OAAOE,+BAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;KACpE,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,gBAAgB,EAAE;QAC9D,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,0GAA0G,CAAC,CAAC;SAC/H;QACD,OAAO,OAAO,CAAC,OAAO,EAAE;aACnB,IAAI,CAAC,YAAY;YAClB,IAAI,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;YAC/C,IAAI,eAAe,CAAC;YACpB,IAAI,gBAAgB,CAAC,KAAK,EAAE;gBACxB,eAAe,GAAG,gBAAgB,CAAC;aACtC;iBACI;gBACD,eAAe,GAAG,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,gBAAgB,EAAE,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,SAAS,EAAE,gBAAgB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;aAC7I;YACD,eAAe,CAAC,WAAW,GAAG,cAAc,CAAC;YAC7C,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,eAAe,EAAEF,iBAAS,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC/F,CAAC;aACG,IAAI,CAAC,UAAU,eAAe,EAAE;YACjC,KAAK,CAAC,WAAW,CAAC,UAAU,cAAc,EAAE,EAAE,EAAE;gBAC5C,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;gBAC7B,OAAO,gBAAgB,CAAC,WAAW,CAAC,cAAc,EAAE;oBAChD,eAAe,EAAE,eAAe,CAAC,IAAI;oBACrC,SAAS,EAAE,SAAS;iBACvB,CAAC,CAAC;aACN,CAAC,CAAC;YACH,OAAO,eAAe,CAAC;SAC1B,CAAC,CAAC;KACN,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,OAAO,EAAE;QAC3D,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY;aAC/B,wBAAwB,CAAC;YAC1B,KAAK,EAAE,OAAO,CAAC,QAAQ;YACvB,SAAS,EAAE,OAAO,CAAC,SAAS;SAC/B,CAAC;aACG,SAAS,CAAC;YACX,IAAI,EAAE,UAAU,IAAI,EAAE;gBAClB,IAAI,OAAO,CAAC,WAAW,EAAE;oBACrB,KAAK,CAAC,WAAW,CAAC,UAAU,QAAQ,EAAE,EAAE,EAAE;wBACtC,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;wBAC7B,OAAO,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACjC,gBAAgB,EAAE,IAAI;4BACtB,SAAS,EAAE,SAAS;yBACvB,CAAC,CAAC;qBACN,CAAC,CAAC;iBACN;aACJ;YACD,KAAK,EAAE,UAAU,GAAG,EAAE;gBAClB,IAAI,OAAO,CAAC,OAAO,EAAE;oBACjB,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBACrB,OAAO;iBACV;gBACD,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC;aAC9D;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,OAAO,YAAY;YACf,IAAI,CAAC,GAAG,KAAK,CAAC,mBAAmB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,EAAE;gBACR,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvC,YAAY,CAAC,WAAW,EAAE,CAAC;aAC9B;SACJ,CAAC;KACL,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE;QACnD,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACxC;aACI,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE;YAC9B,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;QACD,IAAI,QAAQ,GAAG,CAAC,UAAU,CAAC,WAAW,KAAK,cAAc;YACrD,IAAI,CAAC,WAAW,KAAK,cAAc;aAClC,UAAU,CAAC,WAAW,KAAK,YAAY;gBACpC,IAAI,CAAC,WAAW,KAAK,YAAY,CAAC;aACrC,UAAU,CAAC,WAAW,KAAK,SAAS;gBACjC,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC;YACnC,KAAK,CAAC;QACV,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;KACjF,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE;QAClF,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE,EAAE,QAAQ,GAAG,KAAK,CAAC,EAAE;QAC9C,IAAI,YAAY,KAAK,KAAK,CAAC,EAAE,EAAE,YAAY,GAAG,IAAI,CAAC,EAAE;QACrD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,YAAY,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,IAAIC,uBAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE;YACpD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE;gBAC9C,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;aAChE;YACD,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;SACxB;aACI;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;YACtC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;aAChE;YACD,OAAO,IAAI,CAAC,YAAY;iBACnB,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;iBACnF,IAAI,CAAC,UAAU,MAAM,EAAE,EAAE,OAAOC,+BAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;SACpE;KACJ,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,KAAK,EAAE;QACrD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,cAAc,GAAG,EAAE,CAAC,cAAc,EAAE,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;QAC1J,IAAI,SAAS,GAAGC,qCAAqB,CAAC,YAAY;YAC9C,OAAO,KAAK,CAAC,cAAc,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;SAC1D,CAAC,CAAC;QACH,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAqB,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YAClF,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;SACxC;KACJ,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,WAAW,GAAG,YAAY;QAChD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,SAAS,CAAC;YACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACnC;KACJ,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,YAAY,EAAE;QAC7D,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,aAAa;YAC1C,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,YAAY,EAAE;YAC3C,MAAM,IAAI,KAAK,CAAC,mGAAmG,CAAC,CAAC;SACxH;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACnC;QACD,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAChE,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE;QACxD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,QAAQ,CAAC,aAAa;YACtB,QAAQ,CAAC,aAAa,CAAC,SAAS;YAChC,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE;YACzC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE;gBACtD,OAAO,CAAC,KAAK,CAAC,iBAAiB,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;aAChE,CAAC;SACL;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU;YAChC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS;YAChC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC;YAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,OAAO,YAAY;YACf,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtF,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9B,KAAK,CAAC,aAAa,EAAE,CAAC;aACzB;SACJ,CAAC;KACL,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;QAC/C,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SAC5D;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,aAAa;gBAC1C,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,YAAY,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,mGAAmG,CAAC,CAAC;aACxH;YACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAChE;QACD,IAAI,QAAQ,GAAG;YACX,IAAI,EAAE,UAAU,MAAM,EAAE;gBACpB,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;gBAC1B,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;aACpF;YACD,KAAK,EAAE,UAAU,KAAK,EAAE;gBACpB,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;gBACxB,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;aACrF;SACJ,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;KAC9I,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,aAAa,GAAG,YAAY;QAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACnC;QACD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB,CAAC;IACF,OAAO,eAAe,CAAC;CAC1B,CAACL,YAAU,CAAC,CAAC;;ACvVd,IAAIM,UAAQ,GAAG,CAACP,SAAI,IAAIA,SAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,EAAE;IACnE,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACjB,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACnB;IACD,OAAO,CAAC,CAAC;CACZ,CAAC;AACF,AAGA,IAAI,cAAc,IAAI,YAAY;IAC9B,SAAS,cAAc,CAAC,EAAE,EAAE;QACxB,IAAI,YAAY,GAAG,EAAE,CAAC,YAAY,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;QACzD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,KAAK,CAAC;KACnC;IACD,cAAc,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,OAAO,EAAE;QACxD,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtD,QAAQ,KAAK;YACT,KAAK,CAAC,aAAa,KAAKF,qBAAa,CAAC,KAAK;YAC3C,KAAK,CAAC,aAAa,KAAKA,qBAAa,CAAC,KAAK,EAAE;KACpD,CAAC;IACF,cAAc,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE;QACzE,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;YAC1C,KAAK,CAAC,YAAY;iBACb,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC;iBACvC,IAAI,CAAC,UAAU,MAAM,EAAE;gBACxB,OAAO,CAAC,MAAM,CAAC,CAAC;aACnB,CAAC;iBACG,KAAK,CAAC,UAAU,KAAK,EAAE;gBACxB,MAAM,CAAC,KAAK,CAAC,CAAC;aACjB,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC;IACF,cAAc,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;QAC/E,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;SACrF;QACD,IAAI,IAAI,CAAC,OAAO;YACZ,OAAO,OAAO,CAAC;QACnB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;QAC1C,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC;KAClB,CAAC;IACF,cAAc,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,OAAO,EAAE;QAC3D,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;KAC1C,CAAC;IACF,cAAc,CAAC,SAAS,CAAC,sBAAsB,GAAG,UAAU,QAAQ,EAAE;QAClE,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAU,OAAO,EAAE;YACtF,IAAI,EAAE,KAAK,CAAC,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC;gBACjD,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,YAAY,KAAK,QAAQ,CAAC,EAAE;gBAC7D,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;gBAC9B,OAAO,IAAI,CAAC;aACf;YACD,IAAI,YAAY,GAAG,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YACpD,IAAI,cAAc,GAAGS,UAAQ,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;YAChD,cAAc,CAAC,WAAW,GAAG,cAAc,CAAC;YAC5C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,cAAc,EAAEJ,iBAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;YACjF,OAAO,IAAI,CAAC;SACf,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7C,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;SACzC;KACJ,CAAC;IACF,cAAc,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,OAAO,EAAE,YAAY,EAAE;QAC3E,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,QAAQ,GAAG,YAAY,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,8DAA8D,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC;SACpG;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAChD;aACI;YACD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,YAAY;gBACnD,KAAK,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;aAC1C,EAAE,QAAQ,CAAC,CAAC;SAChB;KACJ,CAAC;IACF,cAAc,CAAC,SAAS,CAAC,oBAAoB,GAAG,UAAU,YAAY,EAAE;QACpE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;SACpF;QACD,OAAO,IAAI,eAAe,CAAC;YACvB,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,YAAY;SACxB,CAAC,CAAC;KACN,CAAC;IACF,OAAO,cAAc,CAAC;CACzB,EAAE,CAAC;;ACzGJ,IAAI,aAAa,IAAI,YAAY;IAC7B,SAAS,aAAa,GAAG;QACrB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;IACD,aAAa,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;QAC3C,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,UAAU,EAAE;QAChD,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KACjC,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE;QACpF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG;YACrB,cAAc,EAAE,cAAc;YAC9B,SAAS,EAAE,SAAS,IAAI,EAAE;YAC1B,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,IAAI;SACd,CAAC;KACL,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,UAAU,EAAE,KAAK,EAAE;QACrE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;KACxC,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,UAAU,EAAE;QAC/D,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;KACvC,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;QACxC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB,CAAC;IACF,OAAO,aAAa,CAAC;CACxB,EAAE,CAAC;;AC9BJ,IAAII,UAAQ,GAAG,CAACP,SAAI,IAAIA,SAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,EAAE;IACnE,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACjB,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACnB;IACD,OAAO,CAAC,CAAC;CACZ,CAAC;AACF,AAEA,IAAI,UAAU,IAAI,YAAY;IAC1B,SAAS,UAAU,GAAG;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;IACD,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,OAAO,EAAE;QAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC9B,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,KAAK,EAAE;QAC9C,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,aAAa,IAAI,aAAa,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,EAAE;YAClE,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;SACpF;QACD,IAAI,cAAc,GAAG,KAAK,CAAC;QAC3B,IAAI,iBAAiB,GAAG,IAAI,CAAC;QAC7B,IAAI,KAAK,CAAC,sBAAsB;YAC5B,aAAa;YACb,aAAa,CAAC,aAAa,KAAKF,qBAAa,CAAC,OAAO,EAAE;YACvD,IAAI,CAACM,uBAAO,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE;gBACpD,cAAc,GAAG,IAAI,CAAC;gBACtB,iBAAiB,GAAG,aAAa,CAAC,SAAS,CAAC;aAC/C;SACJ;QACD,IAAI,aAAa,CAAC;QAClB,IAAI,cAAc,EAAE;YAChB,aAAa,GAAGN,qBAAa,CAAC,YAAY,CAAC;SAC9C;aACI,IAAI,KAAK,CAAC,MAAM,EAAE;YACnB,aAAa,GAAGA,qBAAa,CAAC,IAAI,CAAC;SACtC;aACI,IAAI,KAAK,CAAC,SAAS,EAAE;YACtB,aAAa,GAAGA,qBAAa,CAAC,OAAO,CAAC;SACzC;aACI;YACD,aAAa,GAAGA,qBAAa,CAAC,OAAO,CAAC;SACzC;QACD,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,aAAa,IAAI,aAAa,CAAC,aAAa,EAAE;YAC9C,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC;SAC/C;QACD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG;YACxB,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,iBAAiB,EAAE,iBAAiB;YACpC,YAAY,EAAE,IAAI;YAClB,aAAa,EAAE,aAAa;YAC5B,aAAa,EAAE,aAAa;YAC5B,QAAQ,EAAE,KAAK,CAAC,QAAQ;SAC3B,CAAC;QACF,IAAI,OAAO,KAAK,CAAC,mBAAmB,KAAK,QAAQ,EAAE;YAC/C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,aAAa;gBAC/CA,qBAAa,CAAC,SAAS,CAAC;SAC/B;KACJ,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,OAAO,EAAE,MAAM,EAAE,mBAAmB,EAAE;QACnF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACpB,OAAO;QACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,aAAa;YAC7B,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;QAC/D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,aAAa,GAAGA,qBAAa,CAAC,KAAK,CAAC;QACxD,IAAI,OAAO,mBAAmB,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,aAAa,GAAGA,qBAAa,CAAC,KAAK,CAAC;SACvE;KACJ,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,OAAO,EAAE,KAAK,EAAE,mBAAmB,EAAE;QACjF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACpB,OAAO;QACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,aAAa,GAAGA,qBAAa,CAAC,KAAK,CAAC;QACxD,IAAI,OAAO,mBAAmB,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;SAC9D;KACJ,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAU,OAAO,EAAE,QAAQ,EAAE;QACtE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACpB,OAAO;QACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,aAAa,GAAG,QAAQ;cACtCA,qBAAa,CAAC,KAAK;cACnBA,qBAAa,CAAC,OAAO,CAAC;KAC/B,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,OAAO,EAAE;QAChD,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC9B,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,kBAAkB,EAAE;QACvD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAC/B,MAAM,CAAC,UAAU,OAAO,EAAE;YAC3B,OAAO,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SACnD,CAAC;aACG,MAAM,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;YAC5B,GAAG,CAAC,GAAG,CAAC,GAAGS,UAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,aAAa,EAAET,qBAAa,CAAC,OAAO,EAAE,CAAC,CAAC;YACpF,OAAO,GAAG,CAAC;SACd,EAAE,EAAE,CAAC,CAAC;KACV,CAAC;IACF,OAAO,UAAU,CAAC;CACrB,EAAE,CAAC;;AChHJ,IAAIS,UAAQ,GAAG,CAACP,SAAI,IAAIA,SAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,EAAE;IACnE,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACjB,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACnB;IACD,OAAO,CAAC,CAAC;CACZ,CAAC;AACF,AAYA,IAAI,gBAAgB,GAAG;IACnB,SAAS,EAAE,EAAE;IACb,WAAW,EAAE,KAAK;IAClB,QAAQ,EAAE,IAAI;IACd,OAAO,EAAE,IAAI;IACb,aAAa,EAAE,IAAI;IACnB,eAAe,EAAE,IAAI;IACrB,aAAa,EAAE,EAAE;CACpB,CAAC;AACF,IAAI,YAAY,IAAI,YAAY;IAC5B,SAAS,YAAY,CAAC,EAAE,EAAE;QACtB,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,WAAW,EAAE,WAAW,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QACpQ,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAGQ,qBAAU,CAAC,IAAI,CAAC,CAAC,IAAIC,yBAAY,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACjF;IACD,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,EAAE,EAAE;QAC1C,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,kBAAkB,GAAG,EAAE,CAAC,kBAAkB,EAAE,mBAAmB,GAAG,EAAE,CAAC,aAAa,EAAE,EAAE,GAAG,EAAE,CAAC,cAAc,EAAE,cAAc,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,iBAAiB,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,WAAW,EAAE,WAAW,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QAC9V,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,6FAA6F,CAAC,CAAC;SAClH;QACD,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACtC,AAAC,QAAQ,GAAG,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EACxC,SAAS,GAAGC,sBAAM,CAAC,EAAE,EAAEC,gCAAgB,CAACC,qCAAqB,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,AAAC,CAAC;QAC3F,IAAI,cAAc,GAAGC,aAAK,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,OAAO,GAAG;YACV,KAAK,EAAE,QAAQ;YACf,SAAS,EAAE,SAAS;YACpB,aAAa,EAAEC,gCAAgB,CAAC,QAAQ,CAAC,IAAI,SAAS;YACtD,OAAO,EAAE,OAAO;SACnB,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5E,IAAI,yBAAyB,GAAG,YAAY;YACxC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI,mBAAmB,EAAE;gBACrB,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;oBAC1D,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,UAAU,OAAO,EAAE;wBACtE,GAAG,CAAC,OAAO,CAAC,GAAG;4BACX,OAAO,EAAE,mBAAmB,CAAC,SAAS,CAAC;4BACvC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC;yBACvC,CAAC;qBACL,CAAC,CAAC;iBACN,CAAC,CAAC;aACN;YACD,OAAO,GAAG,CAAC;SACd,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;YAC5B,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS,IAAI,EAAE;YAC1B,aAAa,EAAE,yBAAyB,EAAE;YAC1C,MAAM,EAAE,iBAAiB;YACzB,kBAAkB,EAAE,kBAAkB;SACzC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;YAC1C,IAAI,WAAW,CAAC;YAChB,IAAI,KAAK,CAAC;YACV,IAAI,UAAU,GAAGP,UAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,gBAAgB;sBACzE,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC;sBACrC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;YAC3B,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YACtDQ,kBAAO,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC;gBACtC,IAAI,EAAE,UAAU,MAAM,EAAE;oBACpB,IAAI,MAAM,CAAC,MAAM,IAAI,WAAW,KAAK,MAAM,EAAE;wBACzC,KAAK,GAAG,IAAI,WAAW,CAAC;4BACpB,aAAa,EAAE,MAAM,CAAC,MAAM;yBAC/B,CAAC,CAAC;wBACH,OAAO;qBACV;oBACD,KAAK,CAAC,aAAa,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;oBACnD,KAAK,CAAC,SAAS,CAAC,kBAAkB,CAAC;wBAC/B,UAAU,EAAE,UAAU;wBACtB,MAAM,EAAE,MAAM;wBACd,QAAQ,EAAE,QAAQ;wBAClB,SAAS,EAAE,SAAS,IAAI,EAAE;wBAC1B,aAAa,EAAE,yBAAyB,EAAE;wBAC1C,MAAM,EAAE,iBAAiB;qBAC5B,CAAC,CAAC;oBACH,WAAW,GAAG,MAAM,CAAC;iBACxB;gBACD,KAAK,EAAE,UAAU,GAAG,EAAE;oBAClB,KAAK,CAAC,aAAa,CAAC,iBAAiB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;oBACvD,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC;wBACjC,UAAU,EAAE,UAAU;wBACtB,kBAAkB,EAAE,kBAAkB;qBACzC,CAAC,CAAC;oBACH,KAAK,CAAC,gBAAgB,EAAE,CAAC;oBACzB,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC9E,MAAM,CAAC,IAAI,WAAW,CAAC;wBACnB,YAAY,EAAE,GAAG;qBACpB,CAAC,CAAC,CAAC;iBACP;gBACD,QAAQ,EAAE,YAAY;oBAClB,IAAI,KAAK,EAAE;wBACP,KAAK,CAAC,aAAa,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;qBAC5D;oBACD,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC;wBACjC,UAAU,EAAE,UAAU;wBACtB,kBAAkB,EAAE,kBAAkB;qBACzC,CAAC,CAAC;oBACH,KAAK,CAAC,gBAAgB,EAAE,CAAC;oBACzB,IAAI,KAAK,EAAE;wBACP,MAAM,CAAC,KAAK,CAAC,CAAC;wBACd,OAAO;qBACV;oBACD,IAAI,OAAO,cAAc,KAAK,UAAU;wBACpC,cAAc,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;oBACjD,cAAc,CAAC,OAAO,CAAC,UAAU,YAAY,EAAE;wBAC3C,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;4BAClC,KAAK,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;4BACvC,OAAO;yBACV;wBACD,KAAK,CAAC,KAAK,CAAC;4BACR,KAAK,EAAE,YAAY,CAAC,KAAK;4BACzB,SAAS,EAAE,YAAY,CAAC,SAAS;4BACjC,WAAW,EAAE,cAAc;yBAC9B,CAAC,CAAC;qBACN,CAAC,CAAC;oBACH,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC9E,IAAI,WAAW,KAAK,QAAQ,IAAI,WAAW,IAAI,WAAW,CAAC,MAAM,EAAE;wBAC/D,OAAO,WAAW,CAAC,MAAM,CAAC;qBAC7B;oBACD,OAAO,CAAC,WAAW,CAAC,CAAC;iBACxB;aACJ,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,mBAAmB,EAAE;QAC5F,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,EAAE,SAAS,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,QAAQ,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC,WAAW,EAAE,WAAW,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,aAAa,GAAG,EAAE,CAAC;QACzM,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,KAAK,GAAG,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,WAAW,CAAC;QAChB,IAAI,WAAW,GAAG,WAAW,KAAK,cAAc,CAAC;QACjD,IAAI,SAAS,KAAKZ,iBAAS,CAAC,OAAO,IAAI,WAAW,KAAK,cAAc,EAAE;YACnE,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACpC,KAAK,EAAE,KAAK;gBACZ,SAAS,EAAE,SAAS;gBACpB,iBAAiB,EAAE,IAAI;gBACvB,UAAU,EAAE,KAAK;aACpB,CAAC,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YAC/C,WAAW,GAAG,CAAC,QAAQ,IAAI,WAAW,KAAK,mBAAmB,CAAC;YAC/D,WAAW,GAAG,MAAM,CAAC;SACxB;QACD,IAAI,WAAW,GAAG,WAAW,IAAI,WAAW,KAAK,YAAY,IAAI,WAAW,KAAK,SAAS,CAAC;QAC3F,IAAIa,6BAAa,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;YAC9B,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzC,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ;YACzC,QAAQ,EAAE,KAAK;YACf,aAAa,EAAE,SAAS;YACxB,WAAW,EAAE,IAAI;YACjB,MAAM,EAAE,MAAM;SACjB,EAAE,EAAE,CAAC,CAAC;QACP,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YACtB,OAAO,EAAE,OAAO;YAChB,WAAW,EAAEH,aAAK,CAAC,KAAK,CAAC;YACzB,QAAQ,EAAE,KAAK;YACf,sBAAsB,EAAE,WAAW;YACnC,SAAS,EAAE,SAAS;YACpB,MAAM,EAAE,SAAS,KAAKV,iBAAS,CAAC,IAAI;YACpC,SAAS,EAAE,SAAS,KAAKA,iBAAS,CAAC,OAAO;YAC1C,QAAQ,EAAE,QAAQ;YAClB,mBAAmB,EAAE,mBAAmB;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,0BAA0B,GAAG,CAAC,WAAW,IAAI,WAAW,KAAK,mBAAmB,CAAC;QACrF,IAAI,0BAA0B,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC;YAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;YACpD,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;QACD,IAAI,WAAW,EAAE;YACb,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;gBAClC,SAAS,EAAE,SAAS;gBACpB,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,KAAK,CAAC,gBAAgB;sBAC1B,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC;sBAC7B,KAAK;gBACX,OAAO,EAAE,OAAO;gBAChB,mBAAmB,EAAE,mBAAmB;aAC3C,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK,EAAE;gBACtB,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;oBACtB,MAAM,KAAK,CAAC;iBACf;qBACI;oBACD,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC;oBAC1D,IAAI,SAAS,KAAK,aAAa,IAAI,CAAC,CAAC,EAAE;wBACnC,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,EAAE,mBAAmB,CAAC,CAAC;wBACrE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;wBACrD,KAAK,CAAC,gBAAgB,EAAE,CAAC;qBAC5B;oBACD,KAAK,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;oBACzC,MAAM,IAAI,WAAW,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC;iBAClD;aACJ,CAAC,CAAC;YACH,IAAI,WAAW,KAAK,mBAAmB,EAAE;gBACrC,OAAO,aAAa,CAAC;aACxB;iBACI;gBACD,aAAa,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;aACxC;SACJ;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;KACjD,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,wBAAwB,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;QACpF,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAC/B,OAAO,UAAU,eAAe,EAAE,OAAO,EAAE;YACvC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,eAAe;gBAChB,OAAO;YACX,IAAI,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC;YAC9D,IAAI,WAAW,GAAG,eAAe;kBAC3B,eAAe,CAAC,OAAO,CAAC,WAAW;kBACnC,OAAO,CAAC,WAAW,CAAC;YAC1B,IAAI,WAAW,KAAK,SAAS;gBACzB,OAAO;YACX,IAAI,WAAW,GAAG,eAAe;kBAC3B,eAAe,CAAC,OAAO,CAAC,WAAW;kBACnC,OAAO,CAAC,WAAW,CAAC;YAC1B,IAAI,UAAU,GAAG,eAAe;kBAC1B,eAAe,CAAC,aAAa,EAAE;kBAC/B,IAAI,CAAC;YACX,IAAI,SAAS,GAAG,eAAe,GAAG,eAAe,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC;YACxE,IAAI,qBAAqB,GAAG,CAAC,CAAC,OAAO,IAAI,eAAe,CAAC,iBAAiB,IAAI,IAAI;gBAC9E,WAAW,KAAK,YAAY;gBAC5B,WAAW,KAAK,mBAAmB,CAAC;YACxC,IAAI,oBAAoB,GAAG,OAAO,CAAC,UAAU;gBACzC,eAAe,CAAC,aAAa,KAAK,UAAU,CAAC,aAAa,CAAC,CAAC;YAChE,IAAI,kBAAkB,GAAG,WAAW;gBAChC,CAAC,SAAS,IAAI,SAAS,CAAC,aAAa;oBACjC,eAAe,CAAC,aAAa;gBACjC,WAAW,KAAK,MAAM,CAAC;YAC3B,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,aAAa,CAAC;iBACvD,oBAAoB,IAAI,OAAO,CAAC,2BAA2B,CAAC;gBAC7D,qBAAqB,EAAE;gBACvB,IAAI,CAAC,CAAC,CAAC,WAAW,IAAI,WAAW,KAAK,MAAM;oBACxC,eAAe,CAAC,aAAa;oBAC7B,eAAe,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC;oBACxC,eAAe,CAAC,YAAY,EAAE;oBAC9B,IAAI,aAAa,GAAG,IAAI,WAAW,CAAC;wBAChC,aAAa,EAAE,eAAe,CAAC,aAAa;wBAC5C,YAAY,EAAE,eAAe,CAAC,YAAY;qBAC7C,CAAC,CAAC;oBACH,kBAAkB,GAAG,IAAI,CAAC;oBAC1B,IAAI,QAAQ,CAAC,KAAK,EAAE;wBAChB,IAAI;4BACA,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;yBACjC;wBACD,OAAO,CAAC,EAAE;4BACN,UAAU,CAAC,YAAY;gCACnB,MAAM,CAAC,CAAC;6BACX,EAAE,CAAC,CAAC,CAAC;yBACT;qBACJ;yBACI;wBACD,UAAU,CAAC,YAAY;4BACnB,MAAM,aAAa,CAAC;yBACvB,EAAE,CAAC,CAAC,CAAC;wBACN,IAAI,CAACc,4BAAY,EAAE,EAAE;4BACjB,OAAO,CAAC,IAAI,CAAC,uEAAuE;gCAChF,gBAAgB;gCAChB,eAAe,CAAC,WAAW,CAAC,CAAC;yBACpC;qBACJ;oBACD,OAAO;iBACV;gBACD,IAAI;oBACA,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC;oBAClB,IAAI,SAAS,GAAG,KAAK,CAAC,CAAC;oBACvB,IAAI,OAAO,EAAE;wBACT,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;wBACrE,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;wBACtB,SAAS,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;qBAC7D;yBACI;wBACD,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAE;4BACtD,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;4BACvB,SAAS,GAAG,KAAK,CAAC;yBACrB;6BACI;4BACD,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC;4BAClD,IAAI,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gCAC7C,KAAK,EAAE,UAAU;gCACjB,SAAS,EAAE,eAAe,CAAC,iBAAiB;oCACxC,eAAe,CAAC,SAAS;gCAC7B,UAAU,EAAE,IAAI;6BACnB,CAAC,CAAC;4BACH,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC;4BACzB,SAAS,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC;yBACpC;qBACJ;oBACD,IAAI,eAAe,GAAG,KAAK,CAAC,CAAC;oBAC7B,IAAI,SAAS,IAAI,WAAW,KAAK,YAAY,EAAE;wBAC3C,eAAe,GAAG;4BACd,IAAI,EAAE,UAAU,IAAI,UAAU,CAAC,IAAI;4BACnC,OAAO,EAAE,wBAAwB,CAAC,eAAe,CAAC,aAAa,CAAC;4BAChE,aAAa,EAAE,eAAe,CAAC,aAAa;4BAC5C,KAAK,EAAE,IAAI;yBACd,CAAC;qBACL;yBACI;wBACD,eAAe,GAAG;4BACd,IAAI,EAAE,IAAI;4BACV,OAAO,EAAE,wBAAwB,CAAC,eAAe,CAAC,aAAa,CAAC;4BAChE,aAAa,EAAE,eAAe,CAAC,aAAa;4BAC5C,KAAK,EAAE,KAAK;yBACf,CAAC;qBACL;oBACD,IAAI,WAAW,KAAK,KAAK;wBACrB,eAAe,CAAC,aAAa;wBAC7B,eAAe,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC1C,eAAe,CAAC,MAAM,GAAG,eAAe,CAAC,aAAa,CAAC;qBAC1D;oBACD,IAAI,QAAQ,CAAC,IAAI,EAAE;wBACf,IAAI,iBAAiB,GAAG,EAAE,UAAU;4BAChC,eAAe;4BACf,UAAU,CAAC,aAAa,KAAK,eAAe,CAAC,aAAa;4BAC1D,UAAU,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK;4BAC1C,UAAU,CAAC,IAAI,KAAK,eAAe,CAAC,IAAI,CAAC,CAAC;wBAC9C,IAAI,iBAAiB,IAAI,kBAAkB,EAAE;4BACzC,IAAI;gCACA,QAAQ,CAAC,IAAI,CAACZ,+BAAe,CAAC,eAAe,CAAC,CAAC,CAAC;6BACnD;4BACD,OAAO,CAAC,EAAE;gCACN,UAAU,CAAC,YAAY;oCACnB,MAAM,CAAC,CAAC;iCACX,EAAE,CAAC,CAAC,CAAC;6BACT;yBACJ;qBACJ;oBACD,kBAAkB,GAAG,KAAK,CAAC;iBAC9B;gBACD,OAAO,KAAK,EAAE;oBACV,kBAAkB,GAAG,IAAI,CAAC;oBAC1B,IAAI,QAAQ,CAAC,KAAK;wBACd,QAAQ,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC7D,OAAO;iBACV;aACJ;SACJ,CAAC;KACL,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE,eAAe,EAAE;QACpE,IAAI,eAAe,KAAK,KAAK,CAAC,EAAE,EAAE,eAAe,GAAG,IAAI,CAAC,EAAE;QAC3D,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;SAC3F;QACD,IAAI,eAAe,GAAGa,kCAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,eAAe,CAAC,mBAAmB;YACnC,eAAe,CAAC,mBAAmB,CAAC,MAAM,EAAE;YAC5C,IAAI,aAAa,GAAGP,gCAAgB,CAAC,eAAe,CAAC,CAAC;YACtD,OAAO,CAAC,SAAS,GAAGD,sBAAM,CAAC,EAAE,EAAE,aAAa,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;SACpE;QACD,IAAI,OAAO,OAAO,CAAC,2BAA2B,KAAK,WAAW,EAAE;YAC5D,OAAO,CAAC,2BAA2B,GAAG,KAAK,CAAC;SAC/C;QACD,IAAI,kBAAkB,GAAGH,UAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAC/C,OAAO,IAAI,eAAe,CAAC;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,kBAAkB;YAC3B,eAAe,EAAE,eAAe;SACnC,CAAC,CAAC;KACN,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,OAAO,EAAE;QAC9C,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;SAC5G;QACD,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACrE;QACD,IAAI,OAAO,CAAC,iBAAiB,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;SAC7E;QACD,IAAI,OAAO,CAAC,YAAY,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QACD,IAAI,OAAO,OAAO,CAAC,2BAA2B,KAAK,WAAW,EAAE;YAC5D,MAAM,IAAI,KAAK,CAAC,mGAAmG,CAAC,CAAC;SACxH;QACD,OAAO,CAAC,2BAA2B,GAAG,KAAK,CAAC;QAC5C,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/B,IAAI,UAAU,GAAG,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;YACpD,KAAK,CAAC,oBAAoB,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YACnE,OAAO,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC;iBAClC,MAAM,EAAE;iBACR,IAAI,CAAC,UAAU,MAAM,EAAE;gBACxB,KAAK,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;gBACzC,OAAO,CAAC,MAAM,CAAC,CAAC;aACnB,CAAC;iBACG,KAAK,CAAC,UAAU,KAAK,EAAE;gBACxB,KAAK,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;gBACzC,MAAM,CAAC,KAAK,CAAC,CAAC;aACjB,CAAC,CAAC;SACN,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;KACrB,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,YAAY;QACjD,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACxC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,OAAO,CAAC;KAClB,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,OAAO,EAAE;QACzD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,OAAO,EAAE,QAAQ,EAAE;QACnE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE;YACjC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,SAAS,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;YAC3D,QAAQ;gBACJ,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvC,UAAU,EAAE,KAAK;aACpB,EAAE;SACN,CAAC,CAAC;KACN,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE;QAC5E,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;QAC3C,IAAI,MAAM;YACN,MAAM,EAAE,CAAC;QACb,IAAI,cAAc,GAAG,YAAY;YAC7B,IAAI,cAAc,GAAG,IAAI,CAAC;YAC1B,IAAI,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC;YAC9D,IAAI,eAAe,EAAE;gBACjB,IAAI,UAAU,GAAG,eAAe,CAAC,aAAa,EAAE,CAAC;gBACjD,IAAI,UAAU,EAAE;oBACZ,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC;iBACpC;aACJ;YACD,OAAO,cAAc,CAAC;SACzB,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC;YACnC,KAAK,EAAE,QAAQ;YACf,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,UAAU,EAAE,IAAI;YAChB,cAAc,EAAE,cAAc;YAC9B,QAAQ,EAAE,UAAU,OAAO,EAAE;gBACzB,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;aAC9F;SACJ,CAAC,CAAC;KACN,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,oBAAoB,GAAG,UAAU,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;QACzF,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE;YAC9C,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,MAAM,EAAE,MAAM;SACjB,CAAC,CAAC;KACN,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,uBAAuB,GAAG,UAAU,SAAS,EAAE;QAClE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;KACxD,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,OAAO,EAAE,eAAe,EAAE;QAC5E,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,eAAe,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;QACvF,IAAI,QAAQ,GAAGW,kCAAkB,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;YACtC,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SAChE;KACJ,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAU,OAAO,EAAE;QAC9D,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,eAAe,GAAG,EAAE,CAAC,eAAe,EAAE,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;QAC1F,IAAI,MAAM;YACN,MAAM,EAAE,CAAC;QACb,IAAI,CAAC,eAAe;YAChB,OAAO;QACX,IAAI,UAAU,GAAGA,kCAAkB,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnE,IAAI,SAAS,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,eAAe,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5E,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;gBAClF,OAAO,EAAE,eAAe,CAAC,OAAO,KAAK,GAAG,CAAC,CAAC;aAC7C,CAAC,CAAC;SACN;KACJ,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;QAC5C,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;YAC1C,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACvB,MAAM,CAAC,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;QACH,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE;YACxC,IAAI,eAAe,GAAG,EAAE,CAAC,eAAe,CAAC;YACzC,IAAI,eAAe;gBACf,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9B,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC5C,IAAI,uBAAuB,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAChE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,OAAO,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC;KAC5F,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,0BAA0B,GAAG,YAAY;QAC5D,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,uBAAuB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE;YACxC,IAAI,eAAe,GAAG,EAAE,CAAC,eAAe,CAAC;YACzC,IAAI,CAAC,eAAe;gBAChB,OAAO;YACX,IAAI,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC;YACtD,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACnC,IAAI,WAAW,KAAK,YAAY,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC3D,uBAAuB,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC;aAC3D;YACD,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;YACrE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACnC,CAAC,CAAC;QACH,OAAO,uBAAuB,CAAC;KAClC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,wBAAwB,GAAG,YAAY;QAC1D,IAAI,uBAAuB,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAChE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,OAAO,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;KAC/C,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;QACtE,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC;aAC5B,KAAK,CAAC,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE,CAAC,CAAC;QAC9C,OAAO,OAAO,CAAC;KAClB,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,wBAAwB,GAAG,UAAU,OAAO,EAAE;QACjE,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,cAAc,GAAG,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,SAAS,GAAGR,sBAAM,CAAC,EAAE,EAAEC,gCAAgB,CAACQ,sCAAsB,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;QAC/F,IAAI,OAAO,GAAG;YACV,KAAK,EAAE,cAAc;YACrB,SAAS,EAAE,SAAS;YACpB,aAAa,EAAEL,gCAAgB,CAAC,cAAc,CAAC,IAAI,SAAS;SAC/D,CAAC;QACF,IAAI,GAAG,CAAC;QACR,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,OAAO,IAAIb,YAAU,CAAC,UAAU,QAAQ,EAAE;YACtC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,IAAI,OAAO,GAAG;oBACV,IAAI,EAAE,UAAU,MAAM,EAAE;wBACpB,KAAK,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;wBAC1E,KAAK,CAAC,gBAAgB,EAAE,CAAC;wBACzB,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;4BAC7B,IAAI,GAAG,CAAC,IAAI;gCACR,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBACxB,CAAC,CAAC;qBACN;oBACD,KAAK,EAAE,UAAU,KAAK,EAAE;wBACpB,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;4BAC7B,IAAI,GAAG,CAAC,KAAK;gCACT,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;yBACxB,CAAC,CAAC;qBACN;iBACJ,CAAC;gBACF,IAAI,UAAU,GAAGM,UAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,gBAAgB;0BAC5D,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC;0BACrC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC3B,GAAG,GAAGQ,kBAAO,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aAC5D;YACD,OAAO,YAAY;gBACf,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC1E,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,EAAE;oBAC/B,GAAG,CAAC,WAAW,EAAE,CAAC;iBACrB;aACJ,CAAC;SACL,CAAC,CAAC;KACN,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,OAAO,EAAE;QAClD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;KAClC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,OAAO,EAAE;QACpD,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC;QACzD,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAChC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAU,eAAe,EAAE;QACtE,IAAI,EAAE,GAAG,eAAe,CAAC,OAAO,EAAE,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;QAC7E,IAAI,UAAU,GAAG,eAAe,CAAC,aAAa,EAAE,CAAC;QACjD,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC;QAC7D,IAAI,OAAO,EAAE;YACT,OAAOV,+BAAe,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;SACpE;aACI;YACD,IAAI;gBACA,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;oBACtC,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,SAAS;oBACpB,cAAc,EAAE,UAAU,GAAG,UAAU,CAAC,IAAI,GAAG,SAAS;oBACxD,UAAU,EAAE,IAAI;iBACnB,CAAC,CAAC;gBACH,OAAOA,+BAAe,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;aAC1D;YACD,OAAO,CAAC,EAAE;gBACN,OAAOA,+BAAe,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;aACvD;SACJ;KACJ,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,0BAA0B,GAAG,UAAU,mBAAmB,EAAE;QAC/E,IAAI,eAAe,CAAC;QACpB,IAAI,OAAO,mBAAmB,KAAK,QAAQ,EAAE;YACzC,IAAI,qBAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,eAAe,CAAC;YAC/E,IAAI,CAAC,qBAAqB,EAAE;gBACxB,MAAM,IAAI,KAAK,CAAC,8CAA8C,GAAG,mBAAmB,CAAC,CAAC;aACzF;YACD,eAAe,GAAG,qBAAqB,CAAC;SAC3C;aACI;YACD,eAAe,GAAG,mBAAmB,CAAC;SACzC;QACD,IAAI,EAAE,GAAG,eAAe,CAAC,OAAO,EAAE,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;QAC7E,IAAI,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;QAC5D,OAAO;YACH,cAAc,EAAE,IAAI;YACpB,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,KAAK;SAClB,CAAC;KACL,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,YAAY;QAClD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,EAAE,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,SAAS;gBACpC,OAAO;YACX,IAAI,CAAC,SAAS;iBACT,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;iBACpC,OAAO,CAAC,UAAU,QAAQ,EAAE;gBAC7B,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACpD,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,EAAE,EAAE;QAChD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,EAAE,mBAAmB,GAAG,EAAE,CAAC,mBAAmB,CAAC;QAC/I,IAAI,SAAS,GAAG,OAAO,CAAC,SAAS,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,EAAE,GAAG,OAAO,CAAC,WAAW,EAAE,WAAW,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;QAClI,IAAI,OAAO,GAAG;YACV,KAAK,EAAE,QAAQ;YACf,SAAS,EAAE,SAAS;YACpB,aAAa,EAAES,gCAAgB,CAAC,QAAQ,CAAC,IAAI,SAAS;YACtD,OAAO,EAAE,OAAO,IAAI,EAAE;SACzB,CAAC;QACF,OAAO,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACtD,OAAO,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAClD,IAAI,eAAe,CAAC;QACpB,IAAI,eAAe,CAAC;QACpB,IAAI,UAAU,GAAG,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;YACpD,KAAK,CAAC,oBAAoB,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YACnE,IAAI,YAAY,GAAGC,kBAAO,CAAC,KAAK,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC;gBAC9D,IAAI,EAAE,UAAU,MAAM,EAAE;oBACpB,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC;oBAC1D,IAAI,SAAS,KAAK,aAAa,IAAI,CAAC,CAAC,EAAE;wBACnC,IAAI;4BACA,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,mBAAmB,EAAE,WAAW,KAAK,QAAQ,CAAC,CAAC;yBAC/G;wBACD,OAAO,CAAC,EAAE;4BACN,MAAM,CAAC,CAAC,CAAC,CAAC;4BACV,OAAO;yBACV;wBACD,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;wBACvE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;wBACrD,KAAK,CAAC,gBAAgB,EAAE,CAAC;qBAC5B;oBACD,IAAI,MAAM,CAAC,MAAM,IAAI,WAAW,KAAK,MAAM,EAAE;wBACzC,MAAM,CAAC,IAAI,WAAW,CAAC;4BACnB,aAAa,EAAE,MAAM,CAAC,MAAM;yBAC/B,CAAC,CAAC,CAAC;wBACJ,OAAO;qBACV;yBACI,IAAI,WAAW,KAAK,KAAK,EAAE;wBAC5B,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC;qBACnC;oBACD,IAAI,mBAAmB,EAAE;wBACrB,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC;qBACjC;yBACI;wBACD,IAAI;4BACA,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gCAC9C,SAAS,EAAE,SAAS;gCACpB,KAAK,EAAE,QAAQ;gCACf,UAAU,EAAE,KAAK;6BACpB,CAAC,CAAC;yBACN;wBACD,OAAO,CAAC,EAAE,GAAG;qBAChB;iBACJ;gBACD,KAAK,EAAE,UAAU,KAAK,EAAE;oBACpB,KAAK,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;oBACzC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE;wBAClC,IAAI,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC;wBACrC,QAAQ;4BACJ,aAAa,EAAE,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,YAAY,CAAC,EAAE,CAAC;yBACnF,EAAE;qBACN,CAAC,CAAC;oBACH,MAAM,CAAC,KAAK,CAAC,CAAC;iBACjB;gBACD,QAAQ,EAAE,YAAY;oBAClB,KAAK,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;oBACzC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE;wBAClC,IAAI,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC;wBACrC,QAAQ;4BACJ,aAAa,EAAE,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,YAAY,CAAC,EAAE,CAAC;yBACnF,EAAE;qBACN,CAAC,CAAC;oBACH,OAAO,CAAC;wBACJ,IAAI,EAAE,eAAe;wBACrB,MAAM,EAAE,eAAe;wBACvB,OAAO,EAAE,KAAK;wBACd,aAAa,EAAEjB,qBAAa,CAAC,KAAK;wBAClC,KAAK,EAAE,KAAK;qBACf,CAAC,CAAC;iBACN;aACJ,CAAC,CAAC;YACH,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE;gBAClC,IAAI,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC;gBACrC,QAAQ;oBACJ,aAAa,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC;iBACtD,EAAE;aACN,CAAC,CAAC;SACN,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;KACrB,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,SAAS,EAAE;QAC7D,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,gBAAgB,KAAK,SAAS;YAC9B,OAAO;QACX,OAAO,OAAO,CAAC,GAAG,CAAC,gBAAgB;aAC9B,GAAG,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,EAAE,CAAC;aACjE,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;aACpC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACnD,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,iBAAiB,GAAG,YAAY;QACnD,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,SAAS,CAAC;KACpB,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE;QACjD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAIS,UAAQ,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;KACtE,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;QAC1D,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,OAAO,GAAGA,UAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACtC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,WAAW,EAAE,OAAO,EAAE,mBAAmB,EAAE;QACrF,IAAI,OAAO;YACP,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;QACnF,IAAI,mBAAmB,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;SAC9F;KACJ,CAAC;IACF,OAAO,YAAY,CAAC;CACvB,EAAE,CAAC;;ACnxBJ,IAAI,SAAS,IAAI,YAAY;IACzB,SAAS,SAAS,CAAC,YAAY,EAAE;QAC7B,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;KAC7B;IACD,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;QACvC,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,mBAAmB,EAAE,YAAY,EAAE;QAC5G,IAAI,YAAY,KAAK,KAAK,CAAC,EAAE,EAAE,YAAY,GAAG,KAAK,CAAC,EAAE;QACtD,IAAI,eAAe,GAAG,CAACa,qCAAqB,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,YAAY,IAAIA,qCAAqB,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE;YAC9D,eAAe,GAAG,IAAI,CAAC;SAC1B;QACD,IAAI,CAAC,mBAAmB,IAAI,eAAe,EAAE;YACzC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBACb,MAAM,EAAE,MAAM,CAAC,IAAI;gBACnB,MAAM,EAAE,YAAY;gBACpB,KAAK,EAAE,QAAQ;gBACf,SAAS,EAAE,SAAS;aACvB,CAAC,CAAC;SACN;KACJ,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,sBAAsB,GAAG,UAAU,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;QAChF,IAAI,CAACA,qCAAqB,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBACb,MAAM,EAAE,MAAM,CAAC,IAAI;gBACnB,MAAM,EAAE,mBAAmB;gBAC3B,KAAK,EAAE,QAAQ;gBACf,SAAS,EAAE,SAAS;aACvB,CAAC,CAAC;SACN;KACJ,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,QAAQ,EAAE;QACvD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,QAAQ,CAAC,kBAAkB,EAAE;YAC7B,IAAI,YAAY,CAAC;YACjB,IAAI,OAAO,QAAQ,CAAC,kBAAkB,KAAK,UAAU,EAAE;gBACnD,YAAY,GAAG,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aAClE;iBACI;gBACD,YAAY,GAAG,QAAQ,CAAC,kBAAkB,CAAC;aAC9C;YACD,IAAI,UAAU,GAAG,YAAY;gBACzB,KAAK,CAAC,kBAAkB,CAAC;oBACrB,UAAU,EAAE,QAAQ,CAAC,UAAU;oBAC/B,MAAM,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;oBAC9B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;oBAC3B,SAAS,EAAE,QAAQ,CAAC,SAAS;oBAC7B,aAAa,EAAE,QAAQ,CAAC,aAAa;oBACrC,MAAM,EAAE,QAAQ,CAAC,MAAM;iBAC1B,CAAC,CAAC;aACN,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAE;gBAChD,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;gBACvB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;gBAChB,IAAI;oBACA,UAAU,EAAE,CAAC;iBAChB;wBACO;oBACJ,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;iBACtB;aACJ,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;SAC3B;KACJ,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,QAAQ,EAAE;QACzD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAACA,qCAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,aAAa,GAAG,EAAE,CAAC;YACvB,aAAa,CAAC,IAAI,CAAC;gBACf,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI;gBAC5B,MAAM,EAAE,eAAe;gBACvB,KAAK,EAAE,QAAQ,CAAC,QAAQ;gBACxB,SAAS,EAAE,QAAQ,CAAC,SAAS;aAChC,CAAC,CAAC;YACH,IAAI,QAAQ,CAAC,aAAa,EAAE;gBACxB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;qBAC9B,MAAM,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;qBAC5D,OAAO,CAAC,UAAU,OAAO,EAAE;oBAC5B,IAAI,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;oBACjF,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;wBACtB,KAAK,EAAE,KAAK,CAAC,QAAQ;wBACrB,SAAS,EAAE,KAAK,CAAC,SAAS;wBAC1B,iBAAiB,EAAE,IAAI;wBACvB,UAAU,EAAE,KAAK;qBACpB,CAAC,EAAE,kBAAkB,GAAG,EAAE,CAAC,MAAM,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;oBAC3D,IAAI,CAAC,QAAQ,EAAE;wBACX,OAAO;qBACV;oBACD,IAAI,eAAe,GAAGd,qCAAqB,CAAC,YAAY;wBACpD,OAAO,OAAO,CAAC,kBAAkB,EAAE;4BAC/B,cAAc,EAAE,QAAQ,CAAC,MAAM;4BAC/B,SAAS,EAAEQ,gCAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,SAAS;4BACxD,cAAc,EAAE,KAAK,CAAC,SAAS;yBAClC,CAAC,CAAC;qBACN,CAAC,CAAC;oBACH,IAAI,eAAe,EAAE;wBACjB,aAAa,CAAC,IAAI,CAAC;4BACf,MAAM,EAAE,eAAe;4BACvB,MAAM,EAAE,YAAY;4BACpB,KAAK,EAAE,KAAK,CAAC,QAAQ;4BACrB,SAAS,EAAE,KAAK,CAAC,SAAS;yBAC7B,CAAC,CAAC;qBACN;iBACJ,CAAC,CAAC;aACN;YACD,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE;gBACvC,aAAa,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;aACtE,CAAC,CAAC;YACH,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,IAAI,QAAQ,EAAE;gBACV,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE;oBACvCR,qCAAqB,CAAC,YAAY,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;iBAC/E,CAAC,CAAC;aACN;SACJ;KACJ,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,oBAAoB,GAAG,UAAU,EAAE,EAAE;QACrD,IAAI,UAAU,GAAG,EAAE,CAAC,UAAU,EAAE,kBAAkB,GAAG,EAAE,CAAC,kBAAkB,CAAC;QAC3E,IAAI,CAAC,kBAAkB;YACnB,OAAO;QACX,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;KAC3C,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAU,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE;QAClF,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YACb,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,YAAY;YACpB,SAAS,EAAE,SAAS;YACpB,KAAK,EAAE,QAAQ;SAClB,CAAC,CAAC;KACN,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;KAC7B,CAAC;IACF,OAAO,SAAS,CAAC;CACpB,EAAE,CAAC;;ACvIG,IAAI,OAAO,GAAG,OAAO;;ACA5B,IAAIC,UAAQ,GAAG,CAACP,SAAI,IAAIA,SAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,EAAE;IACnE,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACjB,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACnB;IACD,OAAO,CAAC,CAAC;CACZ,CAAC;AACF,AAKA,IAAI,oBAAoB,GAAG,KAAK,CAAC;AACjC,IAAI,mBAAmB,GAAG,IAAIQ,qBAAU,CAAC,UAAU,SAAS,EAAE,OAAO,EAAE;IACnE,SAAS,CAAC,KAAK,GAAGa,qDAAqC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACzE,OAAO,OAAO,CAAC,SAAS,CAAC,CAAC;CAC7B,CAAC,CAAC;AACH,IAAIC,cAAY,IAAI,YAAY;IAC5B,SAAS,YAAY,CAAC,OAAO,EAAE;QAC3B,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC,kBAAkB,EAAE,kBAAkB,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,EAAE,EAAE,GAAG,OAAO,CAAC,kBAAkB,EAAE,kBAAkB,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,EAAE,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;QAClW,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,uXAAuX,CAAC,CAAC;SAC5Y;QACD,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,qBAAqB,GAAG,OAAO,IAAI,kBAAkB,GAAG,CAAC,CAAC;QAC/D,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,cAAc,IAAI,EAAE,CAAC;QAC3C,IAAI,kBAAkB,EAAE;YACpB,UAAU,CAAC,YAAY,EAAE,QAAQ,KAAK,CAAC,qBAAqB,GAAG,KAAK,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAC;SACjG;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzE,IAAI,wBAAwB,GAAG,CAACL,4BAAY,EAAE;YAC1C,OAAO,MAAM,KAAK,WAAW;YAC7B,CAAC,MAAM,CAAC,iBAAiB,CAAC;QAC9B,IAAI,OAAO,iBAAiB,KAAK,WAAW;cACtC,wBAAwB;cACxB,iBAAiB,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACtD,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC;SACnC;QACD,IAAI,CAAC,oBAAoB,IAAI,CAACA,4BAAY,EAAE,EAAE;YAC1C,oBAAoB,GAAG,IAAI,CAAC;YAC5B,IAAI,OAAO,MAAM,KAAK,WAAW;gBAC7B,MAAM,CAAC,QAAQ;gBACf,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,IAAI,EAAE;gBAC5B,IAAI,OAAO,MAAM,CAAC,+BAA+B,KAAK,WAAW,EAAE;oBAC/D,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;wBAC5C,OAAO,CAAC,KAAK,CAAC,+BAA+B;4BACzC,uCAAuC;4BACvC,sGAAsG,CAAC,CAAC;qBAC/G;iBACJ;aACJ;SACJ;QACD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;IACD,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE;QACnD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;YAChC,OAAO,GAAGV,UAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SACnE;QACD,IAAI,IAAI,CAAC,qBAAqB,IAAI,OAAO,CAAC,WAAW,KAAK,cAAc,EAAE;YACtE,OAAO,GAAGA,UAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC,CAAC;SACnE;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAChD,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,OAAO,EAAE;QAC9C,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,OAAO,CAAC,WAAW,KAAK,mBAAmB,EAAE;YAC7C,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;SACrF;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC3B,OAAO,GAAGA,UAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SAC9D;QACD,IAAI,IAAI,CAAC,qBAAqB,IAAI,OAAO,CAAC,WAAW,KAAK,cAAc,EAAE;YACtE,OAAO,GAAGA,UAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC,CAAC;SACnE;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC3C,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,OAAO,EAAE;QAC/C,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YAC5B,OAAO,GAAGA,UAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SAC/D;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC5C,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,OAAO,EAAE;QAClD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;KAC9D,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,OAAO,EAAE;QAClD,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;KAC9C,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,OAAO,EAAE;QACrD,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;KACjD,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE;QACnD,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QACrC,OAAO,MAAM,CAAC;KACjB,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,OAAO,EAAE;QACtD,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QACrC,OAAO,MAAM,CAAC;KACjB,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,uBAAuB,GAAG,UAAU,EAAE,EAAE;QAC3D,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC5B,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,OAAO,EAAE;QACrD,OAAOQ,kBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACtC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,YAAY;QAClD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,YAAY;YACjB,OAAO;QACX,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC;YACjC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,WAAW,EAAE,YAAY;gBACrB,IAAI,KAAK,CAAC,cAAc,EAAE;oBACtB,KAAK,CAAC,cAAc,CAAC;wBACjB,MAAM,EAAE,EAAE;wBACV,KAAK,EAAE;4BACH,OAAO,EAAE,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE;4BACjD,SAAS,EAAE,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,EAAE;yBACzD;wBACD,yBAAyB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;qBACvD,CAAC,CAAC;iBACN;aACJ;SACJ,CAAC,CAAC;KACN,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;QAC5C,OAAO,IAAI,CAAC,YAAY;cAClB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;cAC9B,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC/B,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,wBAAwB,GAAG,YAAY;QAC1D,OAAO,IAAI,CAAC,YAAY;cAClB,IAAI,CAAC,YAAY,CAAC,wBAAwB,EAAE;cAC5C,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC/B,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,UAAU,EAAE;QACnD,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;KAC/C,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,eAAe,EAAE;QACxD,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;KACpD,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;QAC3C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC3B;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB,CAAC;IACF,OAAO,YAAY,CAAC;CACvB,EAAE,CAAC;;;;;;;;;;;;;;;;"}